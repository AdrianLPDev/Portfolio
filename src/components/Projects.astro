---
import Youtube from "./icons/Youtube.astro";
import GitHub from "./icons/Github.astro";

import LinkButton from "./LinkButton.astro";

import Tailwind from "./icons/Tailwind.astro";
import NodeJs from "./icons/Node.astro";
import Html from "./icons/Html.astro";
import Css from "./icons/Css.astro";
import Javascript from "./icons/Javascript.astro";
import Java from "./icons/Java.astro";
import Php from "./icons/Php.astro";
import Axios from "./icons/Axios.astro";
import Mysql from "./icons/Mysql.astro";


const TAGS = {
    HTML: {
        name: "HTML",
        class: "bg-[#003159] text-white",
        icon: Html,
    },
    CSS: {
        name: "CSS",
        class: "bg-[#003159] text-white",
        icon: Css,
    },
    TAILWIND: {
        name: "Tailwind CSS",
        class: "bg-[#003159] text-white",
        icon: Tailwind,
    },
    JAVASCRIPT: {
        name: "JavaScript",
        class: "bg-[#003159] text-white",
        icon: Javascript,
    },
    AXIOS: {
        name: "Axios",
        class: "bg-[#003159] text-white",
        icon: Axios,
    },
    NODE: {
        name: "Node.js",
        class: "bg-black text-white",
        icon: NodeJs,
    },
    JAVA: {
        name: "Java",
        class: "bg-[#003159] text-white",
        icon: Java,
    },
    PHP: {
        name: "PHP",
        class: "bg-[#003159] text-white",
        icon: Php,
    },
    MYSQL: {
        name: "MySQL",
        class: "bg-[#003159] text-white",
        icon: Mysql,
    },
};

const PROJECTS = [
    {
        title: "Wordlabras - Clone de Wordle con BBDD y Ranking",
        description:
            "Aplicación web para jugar como si fuese un Wordle con una opción de Login, con una BBDD por detrás y un sistema de Ranking (Basado en puntuaciones)",
        github: "https://github.com/Kratogans/Wordlabras",
        image: "projects/wordlabras-portfolio.webp",
        tags: [
            TAGS.HTML,
            TAGS.CSS,
            TAGS.JAVASCRIPT,
            TAGS.PHP,
            TAGS.MYSQL,
            TAGS.AXIOS,
        ],
    },
    {
        title: "Tienda - Carrito de Compra",
        description:
            "Aplicación web que simula una tienda con una vista sencilla para simular el carrito/cesta de la compra con PHP y una base de datos MySQL",
        link: "https://youtu.be/FnX8msGV9wU?si=Vr-dKiZtRUBaEkKD",
        github: "https://github.com/AdrianLPDev/CestaCompra",
        image: "projects/Cesta.webp",
        youtube: "https://youtu.be/FnX8msGV9wU?si=Vr-dKiZtRUBaEkKD",
        tags: [TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT, TAGS.PHP, TAGS.MYSQL],
    },
    {
        title: "ShortURL",
        description:
            "Llamada sencilla a la API usando su documentación a través de la librería axios",
        github: "https://github.com/AdrianLPDev/PokeApi",
        image: "projects/PokeApi.webp",
        tags: [TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT, TAGS.AXIOS],
        
    },
    {
        title: "Witter - Red Social",
        description:
            "Una simulación de una red social sencilla con PHP y una base de datos MySQL",
        link: "https://youtu.be/FnX8msGV9wU?si=Vr-dKiZtRUBaEkKD",
        github: "https://github.com/AdrianLPDev/RedSocial",
        image: "projects/RedSocialSimulacion.webp",
        youtube: "https://youtu.be/jXh5UQq1o-A?si=LYAs4vw9CCf2Q-pp",
        tags: [TAGS.HTML, TAGS.CSS, TAGS.PHP, TAGS.MYSQL],
    },
    {
        title: "URLShortener",
        description:
            "Llamada sencilla a la API de una librería llamada 'nanoid' junto con el uso de una BBDD para guardar el token generado y comprobar en la BBDD que no exista otro igual",
        github: "https://github.com/AdrianLPDev/URLShortener-ALPDev",
        image: "projects/URLShort.webp",
        tags: [TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT, TAGS.AXIOS],
    }

];
---

{
    PROJECTS.map(
        ({ image, title, description, tags, link, github, youtube }) => (
            <article class="pb-10">
                <h3 class="text-2xl font-semibold text-yellow-600 dark:text-yellow-200 mb-2">
                    {title}
                </h3>
                <p class="text-lg mb-4 text-pretty">{description}</p>
                <ul class="flex gap-x-2 flex-row mb-2">
                    {tags.map((tag) => (
                        <li>
                            <span
                                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                            >
                                <tag.icon class="size-4" />
                                {tag.name}
                            </span>
                        </li>
                    ))}
                </ul>
                <img
                    loading="lazy"
                    class="rounded shadow-2xl shadow-white/10 aspect-video"
                    src={image}
                    alt={`Captura de pantalla del proyecto ${image}`}
                />
                <footer class="flex gap-x-4 items-end justify-start mt-4">
                    {github && (
                        <LinkButton href={github}>
                            <GitHub class="size-6" />
                            Ver código fuente
                        </LinkButton>
                    )}
                    {youtube && (
                        <LinkButton href={youtube}>
                        <Youtube class="size-6" />
                        Ver video demo
                    </LinkButton>
                    )}
                    
                </footer>
            </article>
        ),
    )
}
